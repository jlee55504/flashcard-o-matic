{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larry\\\\Desktop\\\\flashcard-o-matic-project\\\\src\\\\cards\\\\AddCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, Link } from 'react-router-dom';\nimport { createCard, readDeck } from '../utils/api/index';\nimport home from '../imgs/home.png';\nimport Image from 'react-bootstrap/Image';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddCard() {\n  _s();\n  const {\n    deckId\n  } = useParams();\n  const [deckName, setDeckName] = useState(\"\");\n  const [frontCardText, setFrontCardText] = useState(\"\");\n  const [backCardText, setbackCardText] = useState(\"\");\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function getDeck() {\n      const selectedDeck = await readDeck(deckId, abortController.signal);\n      setDeckName(selectedDeck.name);\n    }\n    getDeck();\n  }, []);\n  const handleChange = ({\n    target\n  }) => {\n    if (target.name === \"AddCard-front-card\") setFrontCardText(target.value);else if (target.name === \"AddCard-back-card\") setbackCardText(target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createCard(deckId, {\n      front: frontCardText,\n      back: backCardText\n    }, abortController.signal);\n    setFrontCardText(\"\");\n    setbackCardText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"home-link\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: home,\n          className: \"home-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), \"Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: deckName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }, this), \" / Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deckName, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"AddCard-front-card\",\n        children: [\"Front\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"AddCard-front-card\",\n          name: \"AddCard-front-card\",\n          placeholder: \"Front side of card\",\n          onChange: handleChange,\n          value: frontCardText,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"AddCard-back-card\",\n        children: [\"Back\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"AddCard-back-card\",\n          name: \"AddCard-back-card\",\n          placeholder: \"Back side of card\",\n          onChange: handleChange,\n          value: backCardText,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        type: \"button\",\n        className: \"AddCard-done-btn\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"AddCard-save-btn\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(AddCard, \"OoAqISCJd62gFur168son/lkkwc=\", false, function () {\n  return [useParams];\n});\n_c = AddCard;\nexport default AddCard;\nvar _c;\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"names":["React","useEffect","useState","Button","useParams","Link","createCard","readDeck","home","Image","jsxDEV","_jsxDEV","Fragment","_Fragment","AddCard","_s","deckId","deckName","setDeckName","frontCardText","setFrontCardText","backCardText","setbackCardText","abortController","AbortController","getDeck","selectedDeck","signal","name","handleChange","target","value","handleSubmit","event","preventDefault","front","back","children","className","to","src","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","placeholder","onChange","required","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/larry/Desktop/flashcard-o-matic-project/src/cards/AddCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, Link } from 'react-router-dom';\nimport { createCard, readDeck } from '../utils/api/index';\nimport home from '../imgs/home.png';\nimport Image from 'react-bootstrap/Image';\nfunction AddCard() {\n    const { deckId } = useParams();\n    const [deckName, setDeckName] = useState(\"\");\n    const [frontCardText, setFrontCardText] = useState(\"\");\n    const [backCardText, setbackCardText] = useState(\"\");\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        async function getDeck() {\n            const selectedDeck = await readDeck(deckId, abortController.signal);\n            setDeckName(selectedDeck.name);\n        } getDeck();\n    }, []);\n    \n    const handleChange = ({ target }) => {\n        if (target.name === \"AddCard-front-card\") setFrontCardText(target.value);\n        else if (target.name === \"AddCard-back-card\") setbackCardText(target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const abortController = new AbortController();\n        createCard(deckId, {front: frontCardText, back: backCardText}, abortController.signal);\n        setFrontCardText(\"\");\n        setbackCardText(\"\");\n    }\n\n    return (\n        <>\n            <div className='nav-bar'><Link to=\"/\" className='home-link' >\n                <Image src={home} className='home-icon' />\n                    Home</Link> / <Link to={`/decks/${deckId}`}>{deckName}</Link> / Add Card</div>\n                    <h1>{deckName}: Add Card</h1>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor='AddCard-front-card'>\n                        Front<textarea id=\"AddCard-front-card\" name=\"AddCard-front-card\" placeholder='Front side of card' onChange={handleChange} value={frontCardText} required ></textarea>\n                    </label>\n                    <label htmlFor='AddCard-back-card'>\n                    Back<textarea id=\"AddCard-back-card\" name=\"AddCard-back-card\" placeholder='Back side of card' onChange={handleChange} value={backCardText} required ></textarea>\n                    </label>\n        <Button variant='secondary' type=\"button\" className='AddCard-done-btn' >Done</Button>\n        <Button variant='primary' type='submit' className='AddCard-save-btn' >Save</Button>\n                </form>\n            </>\n    );\n}\n\nexport default AddCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}