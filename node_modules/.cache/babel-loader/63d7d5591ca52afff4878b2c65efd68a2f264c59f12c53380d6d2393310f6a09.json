{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Button, Image, Card } from 'react-bootstrap/Button';\nimport edit from '../imgs/edit.png';\nimport book from '../imgs/book.png';\nimport add from '../imgs/add.png';\nimport trashcan from '../imgs/trashcan.png';\nimport home from '../imgs/home.png';\nimport { readDeck, readCard, deleteCard, deleteDeck } from '../utils/api/index';\nimport AddCard from '../cards/AddCard';\nimport EditCard from '../cards/EditCard';\nimport Study from '../cards/Study';\nfunction Deck() {\n  _s();\n  const {\n    deckId\n  } = useParams();\n  //const [deckCards, setDeckCards] = useState([]);\n  //const [selectedDeck, setSelectedDeck] = useState({});\n  //const navigate = useNavigate();\n  const [selectedDeckCards, setSelectedDeckCards] = useState([]);\n  //let displayCards;\n  /*useEffect(() => {\n      async function getDeck() {\n          const selectedDeck = await readDeck(deckId);\n          setSelectedDeck(selectedDeck);\n          setSelectedDeckCards(selectedDeck.cards)\n      }\n  }, []);\n   useEffect(()=> {\n      if (selectedDeckCards.length > 0) {\n          displayCards = selectedDeckCards.map((card, index) =>(\n              <div className=\"card-div\" key={index} >\n              <div className=\"card-div-front-div\" >\n                  <p className=\"card-div-front-p\" >{card.front}</p>\n              </div>\n              <div className=\"card-div-back-div\" >\n                  <p className=\"card-div-back-p\" >{card.back}</p>\n                  <div className=\"card-div-btns-div\" >\n                      <Button variant=\"secendary\" type=\"button\" >\n                      <Image src{edit} className=\"edit-img\" />\n                      Edit\n                  </Button>\n                  <Button variant=\"danger\" type=\"button\" onClick{() => handleDeleteCard(card.id)} >\n                      <Image src{trashcan} className=\"trashcan-img\" />\n                  </Button>\n                  </div>\n              </div>\n              </div>\n          ))\n      }\n  }, [selectedDeckCards]);\n    const handleDeleteCard = cardId => {\n      const confirm = window.confirm(\"Delete this card? \\n You will not be able to recover it.\");\n      if (confirm === true) {\n          deleteCard(cardId);\n          \n      }\n  }\n   const handleDeleteDeck = deckId => {\n      const confirm = window.confirm(\"Delete this deck? \\n You will not be able to recover it.\");\n      if (confirm === true) {\n       }\n  }\n   */\n  /* return (\n        <div className='deck-div'>\n           <div className='nav-bar'><Link to=\"/\" className='home-link' >\n               <Image src={home} className='home-icon' />\n               Home</Link> / {selectedDeck.name}\n               </div>\n               <div className=\"select-deck-div\">\n               <h3>{selectedDeck.name}</h3>\n               <p>{slectedDeck.description}</p>\n               <div className=\"select-deck-btns-div\">\n                   <Button variant=\"secendary\" type=\"button\" >\n                       <Image src{edit} className=\"edit-img\" />\n                       Edit\n                   </Button>\n                   <Button variant=\"primary\" type=\"button\" >\n                       <Image src{book} className=\"book-img\" />\n                       Study\n                   </Button>\n                   <Button variant=\"primary\" type=\"button\" >\n                       <Image src{add} className=\"add-img\" />\n                       Add Cards\n                   </Button>\n                   <Button variant=\"danger\" type=\"button\" onClick >\n                       <Image src{trashcan} className=\"trashcan-img\" />\n                   </Button>\n               </div>\n          </div>\n          <h1>Cards</h1>\n          <div className=\"cards-div\">\n           {displayCards}\n          </div>\n   </div>)*/\n}\n_s(Deck, \"Qawk/XmKMrgISRwD7PhwSswEZiY=\", false, function () {\n  return [useParams];\n});\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Button","Image","Card","edit","book","add","trashcan","home","readDeck","readCard","deleteCard","deleteDeck","AddCard","EditCard","Study","Deck","_s","deckId","selectedDeckCards","setSelectedDeckCards","_c","$RefreshReg$"],"sources":["C:/Users/larry/Desktop/flashcard-o-matic-project/src/decks/Deck.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useNavigate, useParams } from 'react-router-dom';\nimport { Button, Image, Card } from 'react-bootstrap/Button';\nimport edit from '../imgs/edit.png';\nimport book from '../imgs/book.png';\nimport add from '../imgs/add.png';\nimport trashcan from '../imgs/trashcan.png';\nimport home from '../imgs/home.png';\nimport { readDeck, readCard, deleteCard, deleteDeck } from '../utils/api/index';\nimport AddCard from '../cards/AddCard';\nimport EditCard from '../cards/EditCard';\nimport Study from '../cards/Study';\n\nfunction Deck() {\n    const { deckId } = useParams();\n    //const [deckCards, setDeckCards] = useState([]);\n    //const [selectedDeck, setSelectedDeck] = useState({});\n    //const navigate = useNavigate();\n    const [selectedDeckCards, setSelectedDeckCards] = useState([]);\n    //let displayCards;\n    /*useEffect(() => {\n        async function getDeck() {\n            const selectedDeck = await readDeck(deckId);\n            setSelectedDeck(selectedDeck);\n            setSelectedDeckCards(selectedDeck.cards)\n        }\n    }, []);\n\n    useEffect(()=> {\n        if (selectedDeckCards.length > 0) {\n            displayCards = selectedDeckCards.map((card, index) =>(\n                <div className=\"card-div\" key={index} >\n                <div className=\"card-div-front-div\" >\n                    <p className=\"card-div-front-p\" >{card.front}</p>\n                </div>\n                <div className=\"card-div-back-div\" >\n                    <p className=\"card-div-back-p\" >{card.back}</p>\n                    <div className=\"card-div-btns-div\" >\n                        <Button variant=\"secendary\" type=\"button\" >\n                        <Image src{edit} className=\"edit-img\" />\n                        Edit\n                    </Button>\n                    <Button variant=\"danger\" type=\"button\" onClick{() => handleDeleteCard(card.id)} >\n                        <Image src{trashcan} className=\"trashcan-img\" />\n                    </Button>\n                    </div>\n                </div>\n                </div>\n            ))\n        }\n    }, [selectedDeckCards]);\n\n\n    const handleDeleteCard = cardId => {\n        const confirm = window.confirm(\"Delete this card? \\n You will not be able to recover it.\");\n        if (confirm === true) {\n            deleteCard(cardId);\n            \n        }\n    }\n\n    const handleDeleteDeck = deckId => {\n        const confirm = window.confirm(\"Delete this deck? \\n You will not be able to recover it.\");\n        if (confirm === true) {\n\n        }\n    }\n     */\n   /* return (\n\n        <div className='deck-div'>\n            <div className='nav-bar'><Link to=\"/\" className='home-link' >\n                <Image src={home} className='home-icon' />\n                Home</Link> / {selectedDeck.name}\n                </div>\n                <div className=\"select-deck-div\">\n                <h3>{selectedDeck.name}</h3>\n                <p>{slectedDeck.description}</p>\n                <div className=\"select-deck-btns-div\">\n                    <Button variant=\"secendary\" type=\"button\" >\n                        <Image src{edit} className=\"edit-img\" />\n                        Edit\n                    </Button>\n                    <Button variant=\"primary\" type=\"button\" >\n                        <Image src{book} className=\"book-img\" />\n                        Study\n                    </Button>\n                    <Button variant=\"primary\" type=\"button\" >\n                        <Image src{add} className=\"add-img\" />\n                        Add Cards\n                    </Button>\n                    <Button variant=\"danger\" type=\"button\" onClick >\n                        <Image src{trashcan} className=\"trashcan-img\" />\n                    </Button>\n                </div>\n           </div>\n           <h1>Cards</h1>\n           <div className=\"cards-div\">\n            {displayCards}\n           </div>\n    </div>)*/\n}\n\nexport default Deck;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,wBAAwB;AAC5D,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC/E,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,KAAK,MAAM,gBAAgB;AAElC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM;IAAEC;EAAO,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAC9B;EACA;EACA;EACA,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAMG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAACoB,EAAA,CAxFQD,IAAI;EAAA,QACUhB,SAAS;AAAA;AAAAqB,EAAA,GADvBL,IAAI;AA0Fb,eAAeA,IAAI;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}