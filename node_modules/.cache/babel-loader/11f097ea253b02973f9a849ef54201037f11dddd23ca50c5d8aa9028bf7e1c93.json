{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larry\\\\Desktop\\\\flashcard-o-matic-project\\\\src\\\\cards\\\\EditCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport home from '../imgs/home.png';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { readDeck, updateCard, readCard } from '../utils/api/index';\nimport { Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditCard() {\n  _s();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [frontCardText, setFrontCardText] = useState(\"\");\n  const [backCardText, setBackCardText] = useState(\"\");\n  const navigate = useNavigate();\n  const [deck, setDeck] = useState({});\n  const [deckName, setDeckName] = useState(\"\");\n  const [card, setCard] = useState({});\n  const [waitForCardToUpdate, setWaitForCardToUpdate] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function getDeck() {\n      const currentDeck = await readDeck(deckId, abortController.signal);\n      setDeck(currentDeck);\n      setDeckName(currentDeck.name);\n      const currentCard = await readCard(cardId, abortController.signal);\n      setCard(currentCard);\n    }\n    getDeck();\n  }, [card]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (card != {} && waitForCardToUpdate) {\n      updateCard(card, abortController.signal);\n      setWaitForCardToUpdate(false);\n      setFrontCardText(\"\");\n      setBackCardText(\"\");\n      navigate(`/decks/${deckId}`);\n    }\n  }, [waitForCardToUpdate]);\n  const handleChange = ({\n    target\n  }) => {\n    if (target.name === \"EditCard-front-text\") setFrontCardText(target.value);else if (target.name === \"EditCard-back-text\") setBackCardText(target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setCard({\n      id: Number(card.id),\n      front: frontCardText,\n      back: backCardText,\n      deckId: Number(card.deckId)\n    });\n    setWaitForCardToUpdate(true);\n  };\n  const a = card.front;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"home-link\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: home,\n          className: \"home-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), \"Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: [\"Deck \", deckName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }, this), \" / Edit Card \", card.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlfor: \"EditCard-front-text\",\n        className: \"EditCard-front-text-label\",\n        children: [\"Front\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"EditCard-front-text\",\n          name: \"EditCard-front-text\",\n          value: frontCardText,\n          placeholder: card.front,\n          onChange: handleChange,\n          required: card.front,\n          defaultValue: card.front,\n          children: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlfor: \"EditCard-back-text\",\n        children: [\"Back\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"EditCard-back-text\",\n          name: \"EditCard-back-text\",\n          value: backCardText,\n          placeholder: card.back,\n          required: true,\n          onChange: handleChange,\n          defaultValue: card.back,\n          children: \"LLLLLLL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        variant: \"secondary\",\n        className: \"EditCard-cancel-btn\",\n        onClick: () => navigate(`/decks/${deckId}`),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"EditCard-submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditCard, \"giALaATXGheW1dpqM/+4b7dAVF8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditCard;\nexport default EditCard;\nvar _c;\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"names":["React","useState","useEffect","home","useParams","useNavigate","Link","readDeck","updateCard","readCard","Image","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","EditCard","_s","deckId","cardId","frontCardText","setFrontCardText","backCardText","setBackCardText","navigate","deck","setDeck","deckName","setDeckName","card","setCard","waitForCardToUpdate","setWaitForCardToUpdate","abortController","AbortController","getDeck","currentDeck","signal","name","currentCard","handleChange","target","value","handleSubmit","event","preventDefault","id","Number","front","back","a","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","src","onSubmit","htmlfor","placeholder","onChange","required","defaultValue","type","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/larry/Desktop/flashcard-o-matic-project/src/cards/EditCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport home from '../imgs/home.png';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { readDeck, updateCard, readCard } from '../utils/api/index';\nimport { Image, Button } from 'react-bootstrap';\n\nfunction EditCard() {\n  const { deckId, cardId } = useParams();\n  const [frontCardText, setFrontCardText] = useState(\"\");\n  const [backCardText, setBackCardText] = useState(\"\")\n  const navigate = useNavigate();\n  const [deck, setDeck] = useState({});\n  const [deckName, setDeckName] = useState(\"\");\n  const [card, setCard] = useState({});\n  const [waitForCardToUpdate, setWaitForCardToUpdate] = useState(false);\n  \n  useEffect(() => {\n    const abortController = new AbortController();\n    async function getDeck() {\n        const currentDeck = await readDeck(deckId, abortController.signal);\n        setDeck(currentDeck);\n        setDeckName(currentDeck.name)\n        const currentCard = await readCard(cardId, abortController.signal);\n        setCard(currentCard);\n        } getDeck();\n    }, [card]);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        if (card != {} && waitForCardToUpdate) {\n            updateCard(card, abortController.signal);\n            setWaitForCardToUpdate(false);\n            setFrontCardText(\"\")\n            setBackCardText(\"\")\n            navigate(`/decks/${deckId}`);\n        }\n    }, [waitForCardToUpdate])\n\n    const handleChange = ({ target }) => {\n        if (target.name === \"EditCard-front-text\") setFrontCardText(target.value);\n        else if (target.name === \"EditCard-back-text\") setBackCardText(target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setCard({\n            id: Number(card.id),\n            front: frontCardText,\n            back: backCardText,\n            deckId: Number(card.deckId)\n        });\n        setWaitForCardToUpdate(true);\n    }\n    const a = card.front;\n    return (\n        <>\n            <h1>Edit Card</h1>\n            <div className='nav-bar'><Link to=\"/\" className='home-link' >\n                <Image src={home} className='home-icon' />\n                Home</Link> / <Link to={`/decks/${deckId}`}>Deck {deckName}</Link> / Edit Card {card.id}</div>\n            <form onSubmit={handleSubmit}>\n                <label htmlfor=\"EditCard-front-text\" className='EditCard-front-text-label' >Front\n                <textarea id=\"EditCard-front-text\" name=\"EditCard-front-text\" \n                    value={frontCardText} placeholder={card.front} \n                    onChange={handleChange} required={card.front} \n                    defaultValue={card.front}>{a}</textarea>\n                </label>\n                <label htmlfor=\"EditCard-back-text\" >Back\n                    <textarea id=\"EditCard-back-text\" name=\"EditCard-back-text\" \n                    value={backCardText} placeholder={card.back} required \n                     onChange={handleChange} defaultValue={card.back}>LLLLLLL</textarea>\n                </label>\n                <Button type=\"button\" variant='secondary' className=\"EditCard-cancel-btn\" onClick={() => navigate(`/decks/${deckId}`)} >Cancel</Button>\n                <Button type=\"submit\" variant=\"primary\" className=\"EditCard-submit-btn\" >Submit</Button>\n            </form>\n        </>\n    );\n}\n\nexport default EditCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}