{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport home from '../imgs/home.png';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { readDeck, updateCard, readCard } from '../utils/api/index';\nimport { Image, Button } from 'react-bootstrap';\nfunction EditCard() {\n  /*  const { deckId, cardId } = useParams();\n      const [frontCard, setFrontCard] = useState(\"\");\n      const [backCard, setBackCard] = useState(\"\")\n      const navigate = useNavigate();\n      const [deck, setDeck] = useState({});\n      const [card, setCard] = useState({});\n      const [waitForCardToUpdate, setWaitForCardToUpdate] = useSate(false);\n      useEffect(() => {\n          const abortController = new AbortController();\n          async function getDeck() {\n              const currentDeck = await readDeck(deckId, abortController.signal);\n              setDeck(currentDeck);\n              const currentCard = await readCard(cardId, abortController.signal);\n              setCard(currentCard);\n          } getDeck();\n      }, [card]);\n  \n      useEffect(() => {\n          if (card != {} && waitForCardToUpdate) {\n              console.log(card);\n              //updateCard(card);\n          }\n      }, [waitForCardToUpdate])\n  \n      const handleChange = ({ target }) => {\n  \n      }\n  \n      const handleSubmit = event => {\n          event.preventDefault();\n      }\n      return (\n          <>\n              <h1>Edit Card</h1>\n              <form onSubmit={handleSubmit}>\n                  <label htmlfor=\"EditCard-front-text\" >\n                      Front\n                      <input id=\"EditCard-front-text\" name=\"EditCard-front-text\"\n                       value={} placeholder={} onChange={handleChange} ></input>\n                  </label>\n                  <label></label>\n                  <Button>Cancel</Button>\n                  <Button type=\"submit \">Submit</Button>\n              </form>\n          </>\n      )\n  */\n}\n_c = EditCard;\nexport default EditCard;\nvar _c;\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"names":["React","useState","useEffect","home","useParams","useNavigate","Link","readDeck","updateCard","readCard","Image","Button","EditCard","_c","$RefreshReg$"],"sources":["C:/Users/larry/Desktop/flashcard-o-matic-project/src/cards/EditCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport home from '../imgs/home.png';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { readDeck, updateCard, readCard } from '../utils/api/index';\nimport { Image, Button } from 'react-bootstrap';\nfunction EditCard() {\n/*  const { deckId, cardId } = useParams();\n    const [frontCard, setFrontCard] = useState(\"\");\n    const [backCard, setBackCard] = useState(\"\")\n    const navigate = useNavigate();\n    const [deck, setDeck] = useState({});\n    const [card, setCard] = useState({});\n    const [waitForCardToUpdate, setWaitForCardToUpdate] = useSate(false);\n    useEffect(() => {\n        const abortController = new AbortController();\n        async function getDeck() {\n            const currentDeck = await readDeck(deckId, abortController.signal);\n            setDeck(currentDeck);\n            const currentCard = await readCard(cardId, abortController.signal);\n            setCard(currentCard);\n        } getDeck();\n    }, [card]);\n\n    useEffect(() => {\n        if (card != {} && waitForCardToUpdate) {\n            console.log(card);\n            //updateCard(card);\n        }\n    }, [waitForCardToUpdate])\n\n    const handleChange = ({ target }) => {\n\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n    }\n    return (\n        <>\n            <h1>Edit Card</h1>\n            <form onSubmit={handleSubmit}>\n                <label htmlfor=\"EditCard-front-text\" >\n                    Front\n                    <input id=\"EditCard-front-text\" name=\"EditCard-front-text\"\n                     value={} placeholder={} onChange={handleChange} ></input>\n                </label>\n                <label></label>\n                <Button>Cancel</Button>\n                <Button type=\"submit \">Submit</Button>\n            </form>\n        </>\n    )\n*/\n\n}\n\nexport default EditCard;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,SAASC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AACnE,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAC/C,SAASC,QAAQA,CAAA,EAAG;EACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAgDCC,EAAA,GAjDQD,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}